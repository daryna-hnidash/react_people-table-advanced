{"version":3,"sources":["App.tsx","components/HomePage/HomePage.tsx","components/NotFoundPage/NotFoundPage.tsx","utils/searchHelper.ts","components/SearchLink.tsx","components/PeopleFilters.tsx","components/Loader/Loader.tsx","components/PersonLink/PersonLink.tsx","components/PeopleTable/PeopleTable.tsx","api.ts","components/PeoplePage/PeoplePage.tsx","Root.tsx","index.tsx"],"names":["App","className","role","isActive","classNames","to","HomePage","NotFoundPage","getSearchWith","currentParams","paramsToUpdate","newParams","URLSearchParams","toString","Object","entries","forEach","key","value","delete","Array","isArray","part","append","set","SearchLink","children","params","props","useSearchParams","searchParams","search","SexFilter","centuries","PeopleFilters","setSearchParams","queryParam","get","centuriesParam","getAll","toggleCentury","century","includes","filter","cent","sex","male","female","type","placeholder","onChange","e","query","target","map","href","Loader","PersonLink","person","slug","name","PeopleTable","people","useParams","sort","visiblePeople","a","b","localeCompare","sorting","mother","find","currPerson","motherName","father","fatherName","born","died","API_URL","wait","delay","Promise","resolve","setTimeout","then","fetch","response","json","PeoplePage","useState","setPeople","loadingError","setLoadingError","isLoading","setIsLoading","useEffect","getPeople","catch","finally","length","Root","path","element","index","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.6b51b5b2.chunk.js","sourcesContent":["import { NavLink, Outlet } from 'react-router-dom';\nimport classNames from 'classnames';\nimport './App.scss';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            className={({ isActive }) => (\n              classNames(\n                'navbar-item',\n                { 'has-background-grey-lighter': isActive },\n              )\n            )}\n            to=\"/\"\n          >\n            Home\n          </NavLink>\n\n          <NavLink\n            className={({ isActive }) => (\n              classNames(\n                'navbar-item',\n                { 'has-background-grey-lighter': isActive },\n              )\n            )}\n            to=\"/people\"\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n\n    <main className=\"section\">\n      <div className=\"container\">\n\n        <Outlet />\n\n      </div>\n    </main>\n  </div>\n);\n","export const HomePage = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","export const NotFoundPage = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","export type SearchParams = {\n  [key: string]: string | string[] | null,\n};\n\n/**\n * This function prepares a correct search string\n * from a given currentParams and paramsToUpdate.\n */\nexport function getSearchWith(\n  currentParams: URLSearchParams,\n  paramsToUpdate: SearchParams, // it's our custom type\n): string {\n  // copy currentParams by creating new object from a string\n  const newParams = new URLSearchParams(\n    currentParams.toString(),\n  );\n\n  // Here is the example of paramsToUpdate\n  // {\n  //   sex: 'm',                ['sex', 'm']\n  //   order: null,             ['order', null]\n  //   centuries: ['16', '19'], ['centuries', ['16', '19']]\n  // }\n  //\n  // - params with the `null` value are deleted;\n  // - string value is set to given param key;\n  // - array of strings adds several params with the same key;\n\n  Object.entries(paramsToUpdate)\n    .forEach(([key, value]) => {\n      if (value === null) {\n        newParams.delete(key);\n      } else if (Array.isArray(value)) {\n        // we delete the key to remove old values\n        newParams.delete(key);\n\n        value.forEach(part => {\n          newParams.append(key, part);\n        });\n      } else {\n        newParams.set(key, value);\n      }\n    });\n\n  // we return a string to use it inside links\n  return newParams.toString();\n}\n","import { Link, LinkProps, useSearchParams } from 'react-router-dom';\nimport { getSearchWith, SearchParams } from '../utils/searchHelper';\n\n/**\n * To replace the the standard `Link` we take all it props except for `to`\n * along with the custom `params` prop that we use for updating the search\n */\ntype Props = Omit<LinkProps, 'to'> & {\n  params: SearchParams,\n};\n\n/**\n * SearchLink updates the given `params` in the search keeping the `pathname`\n * and the other existing search params (see `getSearchWith`)\n */\nexport const SearchLink: React.FC<Props> = ({\n  children, // this is the content between the open and closing tags\n  params, // the params to be updated in the `search`\n  ...props // all usual Link props like `className`, `style` and `id`\n}) => {\n  const [searchParams] = useSearchParams();\n\n  return (\n    <Link\n      // to={{ search: getSearchWith(searchParams, { query: 'sdf' }) }}\n      // to={{ search: getSearchWith(searchParams, { query: null }) }}\n      // to={{ search: getSearchWith(searchParams, { centuries: ['16', '18'] }) }}\n      to={{\n        search: getSearchWith(searchParams, params),\n      }}\n      {...props} // copy all the other props\n    >\n      {children}\n    </Link>\n  );\n};\n","import { useSearchParams } from 'react-router-dom';\nimport { getSearchWith } from '../utils/searchHelper';\nimport { SearchLink } from './SearchLink';\n\nenum SexFilter {\n  male = 'm',\n  female = 'f',\n}\n\nconst centuries: string[] = ['16', '17', '18', '19', '20'];\n\nexport const PeopleFilters = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const queryParam = searchParams.get('query') || '';\n  const centuriesParam = searchParams.getAll('century') || [];\n\n  const queryChangeHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const params = getSearchWith(\n      searchParams, { query: e.target.value ? e.target.value : null },\n    );\n\n    setSearchParams(params);\n  };\n\n  const toggleCentury = (century: string) => {\n    const newCenturiesParam = centuriesParam.includes(century)\n      ? centuriesParam.filter(cent => cent !== century)\n      : [...centuriesParam, century];\n\n    return newCenturiesParam;\n  };\n\n  return (\n    <nav className=\"panel\">\n      <p className=\"panel-heading\">Filters</p>\n\n      <p className=\"panel-tabs\" data-cy=\"SexFilter\">\n        <SearchLink\n          className=\"is-active\"\n          params={{ sex: null }}\n        >\n          All\n        </SearchLink>\n\n        <SearchLink\n          className=\"\"\n          params={{ sex: SexFilter.male }}\n        >\n          Male\n        </SearchLink>\n\n        <SearchLink\n          className=\"\"\n          params={{ sex: SexFilter.female }}\n        >\n          Female\n        </SearchLink>\n      </p>\n\n      <div className=\"panel-block\">\n        <p className=\"control has-icons-left\">\n          <input\n            data-cy=\"NameFilter\"\n            type=\"search\"\n            className=\"input\"\n            placeholder=\"Search\"\n            value={queryParam}\n            onChange={queryChangeHandler}\n          />\n\n          <span className=\"icon is-left\">\n            <i className=\"fas fa-search\" aria-hidden=\"true\" />\n          </span>\n        </p>\n      </div>\n\n      <div className=\"panel-block\">\n        <div className=\"level is-flex-grow-1 is-mobile\" data-cy=\"CenturyFilter\">\n          <div className=\"level-left\">\n            {centuries.map((century) => (\n              <SearchLink\n                key={century}\n                data-cy=\"century\"\n                className=\"button mr-1\"\n                params={{ centuries: toggleCentury(century) }}\n              >\n                {century}\n              </SearchLink>\n            ))}\n            {/* <a\n              data-cy=\"century\"\n              className=\"button mr-1\"\n              href=\"#/people?centuries=16\"\n            >\n              16\n            </a>\n\n            <a\n              data-cy=\"century\"\n              className=\"button mr-1 is-info\"\n              href=\"#/people?centuries=17\"\n            >\n              17\n            </a>\n\n            <a\n              data-cy=\"century\"\n              className=\"button mr-1 is-info\"\n              href=\"#/people?centuries=18\"\n            >\n              18\n            </a>\n\n            <a\n              data-cy=\"century\"\n              className=\"button mr-1 is-info\"\n              href=\"#/people?centuries=19\"\n            >\n              19\n            </a>\n\n            <a\n              data-cy=\"century\"\n              className=\"button mr-1\"\n              href=\"#/people?centuries=20\"\n            >\n              20\n            </a> */}\n          </div>\n\n          <div className=\"level-right ml-4\">\n            <a\n              data-cy=\"centuryALL\"\n              className=\"button is-success is-outlined\"\n              href=\"#/people\"\n            >\n              All\n            </a>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"panel-block\">\n        <a\n          className=\"button is-link is-outlined is-fullwidth\"\n          href=\"#/people\"\n        >\n          Reset all filters\n        </a>\n      </div>\n    </nav>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import classNames from 'classnames';\nimport React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person,\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  return (\n    <NavLink\n      to={person.slug}\n      className={classNames(\n        { 'has-text-danger': person.sex === 'f' },\n      )}\n    >\n      {person.name}\n    </NavLink>\n  );\n};\n","import classNames from 'classnames';\nimport React from 'react';\nimport { useParams, useSearchParams } from 'react-router-dom';\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersonLink';\n\ntype Props = {\n  people: Person[]\n};\n\nexport const PeopleTable: React.FC<Props> = ({ people }) => {\n  const { slug } = useParams();\n  const [searchParams] = useSearchParams();\n\n  const sort = searchParams.get('sort') || '';\n\n  const sorting = () => {\n    switch (sort) {\n      case 'name':\n      case 'sex':\n        return people.sort((a, b) => a[sort].localeCompare(b[sort]));\n\n      case 'born':\n      case 'died':\n        return people.sort((a, b) => a[sort] - b[sort]);\n      default:\n        return people;\n    }\n  };\n\n  const visiblePeople = sorting();\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>\n            <span className=\"is-flex is-flex-wrap-nowrap\">\n              Name\n              <a href=\"#/people?sort=name\">\n                <span className=\"icon\">\n                  <i className=\"fas fa-sort\" />\n                </span>\n              </a>\n            </span>\n          </th>\n\n          <th>\n            <span className=\"is-flex is-flex-wrap-nowrap\">\n              Sex\n              <a href=\"#/people?sort=sex\">\n                <span className=\"icon\">\n                  <i className=\"fas fa-sort\" />\n                </span>\n              </a>\n            </span>\n          </th>\n\n          <th>\n            <span className=\"is-flex is-flex-wrap-nowrap\">\n              Born\n              <a href=\"#/people?sort=born&amp;order=desc\">\n                <span className=\"icon\">\n                  <i className=\"fas fa-sort-up\" />\n                </span>\n              </a>\n            </span>\n          </th>\n\n          <th>\n            <span className=\"is-flex is-flex-wrap-nowrap\">\n              Died\n              <a href=\"#/people?sort=died\">\n                <span className=\"icon\">\n                  <i className=\"fas fa-sort\" />\n                </span>\n              </a>\n            </span>\n          </th>\n\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {visiblePeople.map(person => {\n          const mother = people\n            .find(currPerson => currPerson.name === person.motherName);\n          const father = people\n            .find(currPerson => currPerson.name === person.fatherName);\n\n          return (\n            <tr\n              data-cy=\"person\"\n              key={person.slug}\n              className={classNames(\n                { 'has-background-warning': person.slug === slug },\n              )}\n            >\n              <td>\n                <PersonLink person={person} />\n              </td>\n\n              <td>{person.sex}</td>\n              <td>{person.born}</td>\n              <td>{person.died}</td>\n              {mother\n                ? <td><PersonLink person={mother} /></td>\n                : <td>{person.motherName ? person.motherName : '-'}</td>}\n              {father\n                ? <td><PersonLink person={father} /></td>\n                : <td>{person.fatherName ? person.fatherName : '-'}</td>}\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport async function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import { useEffect, useState } from 'react';\nimport { PeopleFilters } from '../PeopleFilters';\nimport { Loader } from '../Loader';\nimport { PeopleTable } from '../PeopleTable/PeopleTable';\nimport { getPeople } from '../../api';\nimport { Person } from '../../types';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [loadingError, setLoadingError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n    getPeople()\n      .then(setPeople)\n      .catch(() => setLoadingError(true))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"columns is-desktop is-flex-direction-row-reverse\">\n          <div className=\"column is-7-tablet is-narrow-desktop\">\n            <PeopleFilters />\n          </div>\n\n          <div className=\"column\">\n            <div className=\"box table-container\">\n              {isLoading && <Loader />}\n\n              {loadingError && (\n                <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n                  Something went wrong\n                </p>\n              )}\n\n              {!isLoading && !people.length && (\n                <p data-cy=\"noPeopleMessage\">\n                  There are no people on the server\n                </p>\n              )}\n\n              <p>There are no people matching the current search criteria</p>\n\n              {!isLoading && (\n                <PeopleTable people={people} />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n","import {\n  HashRouter as Router, Navigate, Route, Routes,\n} from 'react-router-dom';\nimport { App } from './App';\nimport { HomePage } from './components/HomePage';\nimport { NotFoundPage } from './components/NotFoundPage';\nimport { PeoplePage } from './components/PeoplePage/PeoplePage';\n\nexport const Root = () => (\n  <Router>\n    <Routes>\n      <Route path=\"/\" element={<App />}>\n        <Route index element={<HomePage />} />\n        <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n        <Route path=\"people\" element={<PeoplePage />}>\n          <Route path=\":slug\" element={<PeoplePage />} />\n        </Route>\n        <Route path=\"*\" element={<NotFoundPage />} />\n      </Route>\n    </Routes>\n\n  </Router>\n);\n","import { createRoot } from 'react-dom/client';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { Root } from './Root';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Root />,\n  );\n"],"sourceRoot":""}